{
    "help": {
        "-": "When there is only one - then this MUST be used.",
        "--": "When there are two -- then this is optional."
    },
    "add": {
        "function": "add",
        "suffix": {
            "-name": "str",
            "-url": "str",
            "-current_chapter": "int",
            "-download": "bool",
            "--tags": "List[str]",
            "--make_folder": "bool"
        },
        "args": {
            "-name": "name",
            "-url": "url",
            "-current_chapter": "current_chap",
            "-download": "to_download",
            "--tags": "tags",
            "--make_folder": "make_dir"
        },
        "help": {
            "add": "This adds a new entry.",
            "-name": "Name of the new entry.",
            "-url": "Url of the new entry. The URL should go to the manga page and not a specific chapter.",
            "-current_chapter": "The number of the chapter you currently are on. Not the number of a non-existing chapter. (enter a number)",
            "-download": "Whether or not every new chapter shall be downloaded. (options: True, False)",
            "--tags": "List the tags you want this new entry to have. Separate them with a comma (,).",
            "--make_folder": "Whether the entry should have a Folder. This is automatically True if -download is True. (options: True, False)",
            "default": "The scan to which the new Entry belongs will be automatically deducted from the URL."
        }
    },
    "remove": {
        "function": "remove",
        "suffix": {
            "-name": "str",
            "-scan": "int",
            "--delete_folder": "bool"
        },
        "args": {
            "-name": "name",
            "-scan": "scans",
            "--delete_folder": "del_dir"
        },
        "help": {
            "remove": "This removes an entry.",
            "-name": "Name of the entry.",
            "-scan": "The scanlation to which the entry belongs. (options: asura, reaper, AsuraScans, ReaperScans | this is case-insensitive)",
            "--delete_folder": "Delete the folder that belongs to the entry."
        }
    },
    "change": {
        "function": "change",
        "suffix": {
            "-name": "str",
            "-scan": "int",
            "--add_folder": "bool",
            "--new_chapter": "int",
            "--download": "bool",
            "--url": "str",
            "--tags": "List[str]",
            "--remove_tags": "List[str]"
        },
        "args": {
            "-name": "name",
            "-scan": "scans",
            "--add_folder": "add_dir",
            "--new_chapter": "new_chap",
            "--download": "to_download",
            "--url": "url",
            "--tags": "tags",
            "--remove_tags": "tags_to_rm"
        },
        "help": {
            "change": "This changes an entry.",
            "-name": "Name of the entry.",
            "-scan": "The scanlation to which the entry belongs. (options: asura, reaper, AsuraScans, ReaperScans | this is case-insensitive)",
            "--add_folder": "Whether the entry should have a Folder. This is automatically True if -download is True. (options: True, False)",
            "--new_chapter": "The number of the chapter you currently are on. Not the number of a non-existing chapter. (enter a number)",
            "--download": "Whether or not every new chapter shall be downloaded. (options: True, False)",
            "--url": "Url of the changed entry. The URL should go to the manga page and not a specific chapter.",
            "--tags": "List of the new tags you want this entry to have. Separate them with a comma (,).",
            "--remove_tags": "List of the tags you want this entry to have removed. Separate them with a comma (,)."
        }
    },
    "delete_folder": {
        "function": "deldir",
        "suffix": {
            "-name": "str",
            "-scan": "int"
        },
        "args": {
            "-name": "name",
            "-scan": "scans"
        },
        "help": {
            "deldir": "Delete the directory associated with a specific bookmark and update the download status.",
            "-name": "The name of the bookmark whose folder should be deleted.",
            "-scan": "Which scan (ASURA or REAPER)."
        }
    },
    "list": {
        "function": "list_bookmarks",
        "suffix": {
            "--scan": "int"
        },
        "args": {
            "--scan": "scans"
        },
        "help": {
            "list_bookmarks": "List all bookmarks in both 'Reaper' and 'Asura' scans, or only in one of them.",
            "--scan": "The scan (ASURA or REAPER). Default is None (both scans)."
        }
    },
    "search": {
        "function": "search_bookmarks",
        "suffix": {
            "-name": "str",
            "-scan": "int"
        },
        "args": {
            "-name": "query",
            "-scan": "scan"
        },
        "help": {
            "search": "Search for bookmarks in both 'Reaper' and 'Asura' scans, or only in one of them, based on a query.",
            "-name": "The name to search for in bookmarks.",
            "-scan": "The scan (ASURA or REAPER). Default is None (both scans)."
        }
    },
    "view_details": {
        "function": "view_bookmark_details",
        "suffix": {
            "-name": "str",
            "-scan": "int"
        },
        "args": {
            "-name": "name",
            "-scan": "scan"
        },
        "help": {
            "view_details": "View details of a bookmark in 'Reaper' or 'Asura' scans based on the name.",
            "-name": "The name of the bookmark to view details.",
            "-scan": "The scan (ASURA or REAPER)."
        }
    },
    "view_and_search": {
        "function": "view_and_search_bookmarks",
        "suffix": {
            "-query": "str",
            "-scan": "int",
            "--result_count": "int",
            "--search_by_tags": "bool"
        },
        "args": {
            "-query": "query",
            "-scan": "scans",
            "--result_count": "result_count",
            "--search_by_tags": "search_by_tags"
        },
        "help": {
            "view_and_search": "View details of bookmarks in 'Reaper' or 'Asura' scans based on a query or list the top search results.",
            "-query": "The query to search for in bookmark names.",
            "-scan": "The scan (ASURA or REAPER). Default is None (both scans).",
            "--result_count": "The maximum number of search results to return. Default is 3.",
            "--search_by_tags": "Search by a tag. Default is False."
        }
    },
    "export": {
        "function": "export_bookmarks",
        "suffix": {
            "-bookmarks_data": "str",
            "-scan": "int"
        },
        "args": {
            "-bookmarks_data": "bookmarks_data",
            "-scan": "scan_type"
        },
        "help": {
            "export": "Export a single bookmark or a list of bookmarks to an zip file.",
            "-bookmarks_data": "If str: The name of the single bookmark to export. If List: A list of names of the bookmarks.",
            "-scan": "The scan type (ASURA or REAPER)."
        }
    },
    "import": {
        "function": "import_bookmarks",
        "suffix": {
            "-import_path": "str",
            "-scan": "int"
        },
        "args": {
            "-import_path": "import_path",
            "-scan": "scans"
        },
        "help": {
            "import": "Import bookmarks from a specific path or folder and move the source to the 'done' folder with a timestamp.",
            "-import_path": "The path to import bookmarks from. This can be a file or a folder.",
            "-scan": "The scan (ASURA or REAPER)."
        }
    },
    "create_backup": {
        "function": "create_backup",
        "suffix": {
            "-scan": "int"
        },
        "args": {
            "-scan": "scan_type"
        },
        "help": {
            "create_backup": "Create a backup of the bookmarks in a specified scan type (ASURA or REAPER) and their directories.",
            "-scan": "The scan to create a backup for (ASURA or REAPER)."
        }
    },
    "restore_backup": {
        "function": "restore_backup",
        "suffix": {
            "-scan": "int",
            "-backup_filename": "str"
        },
        "args": {
            "-scan": "scan_type",
            "-backup_filename": "backup_filename"
        },
        "help": {
            "restore_backup": "Restore bookmarks and their directories from a backup in a specified scan type (ASURA or REAPER).",
            "-scan": "The scan to restore bookmarks to.",
            "-backup_filename": "The filename of the backup to restore."
        }
    },
    "sort": {
        "function": "sort_bookmarks",
        "suffix": {
            "-scan": "int",
            "-criteria": "int",
            "--ascending": "bool"
        },
        "args": {
            "-scan": "scan_type",
            "-criteria": "criteria",
            "--ascending": "ascending"
        },
        "help": {
            "sort": "Sort bookmarks based on specified criteria and order.",
            "-scan": "The scan (ASURA or REAPER) for which bookmarks should be sorted.",
            "-criteria": "The sorting criteria to use. Default is SORT_NAME (0). SORT_NAME: Sort by bookmark name. SORT_CHAP: Sort by the current chapter number. SORT_TO_DOWNLOAD: Sort by the 'to_download' status. SORT_TAGS_AMOUNT: Sort by the number of tags.",
            "--ascending": "Determines the sorting order. Default is True (ascending)."
        }
    },
    "filter_by_tags": {
        "function": "filter_bookmarks_by_tags",
        "suffix": {
            "-scan": "int",
            "-tags": "List[str]"
        },
        "args": {
            "-scan": "scan_type",
            "-tags": "tags"
        },
        "help": {
            "filter_by_tags": "Filter bookmarks based on specified tags.",
            "-scan": "The scan (ASURA or REAPER) for which bookmarks should be filtered.",
            "-tags": "A list of tags used as filter criteria."
        }
    },
    "sort_and_filter": {
        "function": "sort_and_filter_bookmarks",
        "suffix": {
            "-scan": "int",
            "-criteria": "int",
            "--ascending": "bool",
            "-tags": "List[str]"
        },
        "args": {
            "-scan": "scan_type",
            "-criteria": "criteria",
            "--ascending": "ascending",
            "-tags": "tags"
        },
        "help": {
            "sort_and_filter": "Sort and filter bookmarks based on specified criteria and tags.",
            "-scan": "The scan (ASURA or REAPER) for which bookmarks should be sorted and filtered.",
            "-criteria": "The sorting criteria to use. Default is SORT_NAME (0).",
            "--ascending": "Determines the sorting order. Default is True (ascending).",
            "-tags": "A list of tags used as filter criteria. Default is None (no filtering)."
        }
    },
    "delete_multiple": {
        "function": "delete_multiple_bookmarks",
        "suffix": {
            "-scan": "int",
            "-bookmark_names": "List[str]"
        },
        "args": {
            "-scan": "scan_type",
            "-bookmark_names": "bookmark_names"
        },
        "help": {
            "delete_multiple_bookmarks": "Delete multiple bookmarks simultaneously.",
            "-scan": "The scan (ASURA or REAPER) from which to delete bookmarks.",
            "-bookmark_names": "A list of bookmark names to be deleted."
        }
    },
    "archive": {
        "function": "archive_bookmark",
        "suffix": {
            "-scan": "int",
            "-bookmark_name": "str"
        },
        "args": {
            "-scan": "scan_type",
            "-bookmark_name": "bookmark_name"
        },
        "help": {
            "archive": "Archive a bookmark by moving it to the archive section.",
            "-scan": "The scan (ASURA or REAPER).",
            "-bookmark_name": "The name of the bookmark to be archived."
        }
    },
    "unarchive": {
        "function": "unarchive_bookmark",
        "suffix": {
            "-scan": "int",
            "-bookmark_name": "str"
        },
        "args": {
            "-scan": "scan_type",
            "-bookmark_name": "bookmark_name"
        },
        "help": {
            "unarchive": "Unarchive a bookmark by moving it from the archive section to the main list.",
            "-scan": "The scan (ASURA or REAPER).",
            "-bookmark_name": "The name of the bookmark to be unarchived."
        }
    },
    "list_archived": {
        "function": "list_archived_bookmarks",
        "suffix": {
            "-scan": "int"
        },
        "args": {
            "-scan": "scan_type"
        },
        "help": {
            "list_archived": "List archived bookmarks.",
            "-scan": "The scan (ASURA or REAPER)."
        }
    },
    "get_total": {
        "function": "get_total_bookmarks",
        "suffix": {
            "-scan": "int"
        },
        "args": {
            "-scan": "scan_type"
        },
        "help": {
            "get_total": "Calculate and return the total number of bookmarks in the user's collection for a specific scan (ASURA or REAPER).",
            "-scan": "The scan to calculate bookmarks for."
        }
    },
    "get_total_archived": {
        "function": "get_total_archived_bookmarks",
        "suffix": {
            "-scan": "int"
        },
        "args": {
            "-scan": "scan_type"
        },
        "help": {
            "get_total_archived": "Calculate and return the number of archived bookmarks in the user's collection for a specific scan (ASURA or REAPER).",
            "-scan": "The scan to calculate archived bookmarks for."
        }
    },
    "calculate_download_progress": {
        "function": "calculate_download_progress",
        "suffix": {
            "-scan": "int"
        },
        "args": {
            "-scan": "scan_type"
        },
        "help": {
            "calculate_download_progress": "Calculate and return the download progress as a percentage for a specific scan (ASURA or REAPER).",
            "-scan": "The scan to calculate download progress for."
        }
    },
    "get_most_used_tags": {
        "function": "get_most_used_tags",
        "suffix": {
            "-scan": "int",
            "-top_n": "int"
        },
        "args": {
            "-scan": "scan_type",
            "-top_n": "top_n"
        },
        "help": {
            "get_most_used_tags": "Retrieve a list of the top N most used tags in the bookmark collection for a specific scan (ASURA or REAPER).",
            "-scan": "The scan to analyze tags for.",
            "-top_n": "The number of top tags to retrieve. Default is 5."
        }
    },
    "calculate_average_chap_progress": {
        "function": "calculate_average_chap_progress",
        "suffix": {
            "-scan": "int"
        },
        "args": {
            "-scan": "scan_type"
        },
        "help": {
            "calculate_average_chap_progress": "Calculate and return the average chapter progress of the bookmark collection for a specific scan (ASURA or REAPER).",
            "-scan": "The scan to calculate average chapter progress for."
        }
    },
    "get_recently_archived": {
        "function": "get_recently_archived_bookmarks",
        "suffix": {
            "-scan": "int",
            "-num": "int"
        },
        "args": {
            "-scan": "scan_type",
            "-num": "num"
        },
        "help": {
            "get_recently_archived_bookmarks": "Retrieve a list of the most recently archived bookmarks for a specific scan (ASURA or REAPER).",
            "-scan": "The scan to retrieve recently archived bookmarks for.",
            "-num": "The number of recently archived bookmarks to retrieve. Default is 5."
        }
    },
    "list_all_tags": {
        "function": "list_all_tags",
        "suffix": {
            "-scan": "int",
            "-include_entries": "bool",
            "-display_all": "bool"
        },
        "args": {
            "-scan": "scan_type",
            "-include_entries": "include_entries",
            "-display_all": "display_all"
        },
        "help": {
            "list_all_tags": "List all tags in the bookmark collection for a specific scan (ASURA or REAPER). You must either set display_all = True or select which scan.",
            "-scan": "The scan to list tags for (ASURA or REAPER). Default is ASURA.",
            "-include_entries": "Whether to include entries connected to each tag. Default is False.",
            "-display_all": "Whether to display all tags, whichever scan they are from. Default is False."
        }
    }
}